pipeline {
   
    agent any
    environment {
         PATH = '/usr/bin:$PATH'
    }
    tools {
            jdk "OpenJDK8"
            jfrog 'jfrog-cli'
         }

    stages {
     stage ('Artifactory Configuration') {
            steps {
                rtServer (
                    id: "devsecopsunicloud",
                    url: "https://assesment1.jfrog.io/artifactory",
                    credentialsId: "JF_ACCESS_TOKEN"
                )
 
                rtMavenResolver (
                    id: 'maven-resolver',
                    //serverId: 'devsecopsunicloud',
                    releaseRepo: 'mvnassesment-libs-release',
                    snapshotRepo: 'mvnassesment-libs-snapshot'
                )  
                 
                rtMavenDeployer (
                    id: 'maven-deployer',
                    //serverId: 'devsecopsunicloud',
                    releaseRepo: 'mvnassesment-libs-release-local',
                    snapshotRepo: 'mvnassesment-libs-snapshot-local',
                    threads: 6,
                    properties: ['BinaryPurpose=Technical-BlogPost', 'Team=DevOps-Acceleration']
                )
            }
        }
        stage('Build Maven Project') {
            steps {
                rtMavenRun (
                    tool: 'maven',
                    pom: 'pom.xml',
                    goals: '-U clean install',
                    opts: '-Xms1024m -Xmx4096m',
                    deployerId: "maven-deployer",
                    resolverId: "maven-resolver"
                )
            }
        }
        stage ('Testing') {

            steps {
                withMaven(maven : 'Maven3') {
                    sh 'mvn test'
                }
            }
        }
        stage('Install Maven Package') {
            steps {
                withMaven(maven : 'Maven3') {
                    sh 'mvn package -DskipTests'
                } 
            }
        }
        stage('Build Docker Image') {
           
            steps {
                 sh 'docker build -t myassignment.jfrog.io/docker-local/docker-local:assignment_0227 .'
            }
        }
        stage('Push Docker Image') {
           
            steps {
                 script {
                    docker.withRegistry( 'https://myassignment.jfrog.io/docker-local', 'JfrogAws_Id' ) { 
                      sh 'docker push myassignment.jfrog.io/docker-local/docker-local:assignment_0227'    
                    } 
                 }
            }
        }
    }
}
